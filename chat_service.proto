syntax = "proto3";

option go_package = "group_chat_service/gen";

service GroupChat {
  rpc Login (LoginRequest) returns (LoginResponse) {}
  rpc JoinChat (JoinChatRequest) returns (JoinChatResponse) {}
  rpc AppendChat (AppendChatRequest) returns (AppendChatResponse) {}
  rpc LikeChat (LikeChatRequest) returns (LikeChatResponse) {}
  rpc RemoveLike (RemoveLikeRequest) returns (RemoveLikeResponse) {}
  rpc PrintHistory (PrintHistoryRequest) returns (PrintHistoryResponse) {}
  rpc RefreshChat(RefreshChatRequest) returns (RefreshChatResponse) {}
  rpc SubscribeToGroupUpdates(stream Unsubscribe) returns (stream GroupUpdates) {}
}

message LoginRequest {
  string user_name = 1;
  string group_name = 2;
}

message LoginResponse {
}


message JoinChatRequest {
  string new_group_name = 1;
  string old_group_name = 2;
  string user_name = 3;
}

message JoinChatResponse {
}


message AppendChatRequest {
  string user_name = 1;
  string group_name = 2;
  string message = 3;
}

message AppendChatResponse {
}


message LikeChatRequest {
  string user_name = 1;
  string group_name = 2;
  int32 message_id = 3;
}


message LikeChatResponse {
}

message RemoveLikeRequest {
  string user_name = 1;
  string group_name = 2;
  int32 message_id = 3;
}

message RemoveLikeResponse {
}


message PrintHistoryRequest {
  string user_name = 1;
  string group_name = 2;
}


message PrintHistoryResponse {
}

message RefreshChatRequest {
  string user_name = 1;
  string group_name = 2;
}

message RefreshChatResponse {
  string group_name = 1;
  GroupData group_data = 2;
}

message Unsubscribe {
  string user_name = 1;
  string group_name = 2;
}

message GroupUpdates {
  string group_updated = 1;
  int32 version = 2;
}

message GroupData {
  map<string, int32> users = 1;
  repeated Message messages = 2;
  int32 version = 3;
}


message Message {
  string message = 1;
  string owner = 2;
  map<string, bool> likes = 3;
}
